{"version":3,"sources":["components/Header.js","components/Review.js","components/Main.js","components/Footer.js","components/Register.js","components/Login.js","components/ProtectedRoute.js","utils/api.js","utils/auth.js","components/InfoTooltip.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","onSignOut","className","path","onClick","to","Review","props","review","title","message","Main","reviews","map","item","id","Footer","Register","onRegister","useState","avatar","setAvatar","email","setEmail","name","setName","password","setPassword","password_confirmation","setPasswordСonfirmation","emailDirty","setEmailDirty","nameDirty","setNameDirty","passwordDirty","setPasswordDirty","passwordСonfirmationDirty","setPasswordСonfirmationDirty","avatarError","setAvatarError","emailError","setEmailError","nameError","setNameError","passwordError","setPasswordError","passwordСonfirmationError","setPasswordСonfirmationError","formValid","setFormValid","useEffect","handlerBlur","event","target","onSubmit","preventDefault","noValidate","value","type","onChange","imageFile","files","match","size","console","log","onChangeFile","placeholder","htmlFor","required","onBlur","test","String","toLowerCase","emailHandler","length","nameHandler","passwordHandler","passwordСonfirmationHandler","disabled","Login","onLogin","ProtectedRoute","Component","component","loggedIn","getReviews","token","fetch","headers","then","response","ok","json","Promise","reject","status","checkAnswerCorrectness","BASE_URL","InfoTooltip","isOpen","onClose","onOvarlayClose","handleEscClose","keyCode","document","addEventListener","removeEventListener","App","setLoggedIn","history","useHistory","posts","setPosts","isInfoTooltipInformation","setInfoTooltipInformation","isInfoTooltipPopupOpen","setInfoTooltipPopupOpen","handleOpenInfoTooltip","closePopup","getPosts","localStorage","getItem","api","result","data","slice","catch","err","handleTokenCheck","useCallback","push","removeItem","method","body","JSON","stringify","auth","access_token","setItem","classList","contains","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c3f72b2d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link, Route, Switch } from 'react-router-dom';\r\n\r\nfunction Header({ onSignOut }) {\r\n    return (\r\n        <header className=\"header\">\r\n            <Switch>\r\n                <Route path=\"/main\">\r\n                    <div className=\"header__container\">\r\n                        <Link onClick={onSignOut} to=\"/signin\" className=\"header__exit\">\r\n                            Выйти\r\n                        </Link>\r\n                    </div>\r\n                </Route>\r\n                <Route path=\"/signup\">\r\n                    <Link to=\"/signin\" className=\"header__registration\">\r\n                        Войти\r\n                    </Link>\r\n                </Route>\r\n                <Route path=\"/signin\">\r\n                    <Link to=\"/signup\" className=\"header__login\">\r\n                        Регистрация\r\n                    </Link>\r\n                </Route>\r\n            </Switch>\r\n        </header>\r\n    );\r\n}\r\nexport default Header;\r\n\r\n","import React from 'react';\r\n\r\nfunction Review(props) {\r\n    return(\r\n        <article className=\"element\">\r\n            <h2 className=\"element__title\">{props.review.title}</h2>\r\n            <p className=\"element__message\">{props.review.message}</p>\r\n        </article>\r\n    )\r\n}\r\nexport default Review;","import React from 'react';\r\nimport Review from \"./Review.js\";\r\n\r\nfunction Main({ reviews }) {\r\n    return(\r\n        <main className=\"content\">\r\n            <section className=\"elements\">\r\n                {reviews.map((item) => {\r\n                        return(\r\n                            <Review\r\n                                key={item.id}\r\n                                review={item}\r\n                            />\r\n                        )\r\n                    } \r\n                )}\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\nexport default Main;","function Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__copyright\">&#169; 2021 Test Task Navek Soft</p>\r\n        </footer>\r\n    );\r\n}\r\nexport default Footer;","import { useState, useEffect } from 'react';\r\n\r\nfunction Register({ onRegister }) {\r\n    //данные avatar\r\n    const [avatar, setAvatar] = useState('');\r\n    //данные email\r\n    const [email, setEmail] = useState('');\r\n    //данные name\r\n    const [name, setName] = useState('');\r\n    //данные password\r\n    const [password, setPassword] = useState('');\r\n    //данные passwordСonfirmation\r\n    const [password_confirmation, setPasswordСonfirmation] = useState('');\r\n    \r\n    //были или не были в input\r\n    const [emailDirty, setEmailDirty] = useState(false);\r\n    const [nameDirty, setNameDirty] = useState(false);\r\n    const [passwordDirty, setPasswordDirty] = useState(false);\r\n    const [passwordСonfirmationDirty, setPasswordСonfirmationDirty] = useState(false);\r\n    \r\n    //отражает ошибку под input\r\n    const [avatarError, setAvatarError] = useState('');\r\n    const [emailError, setEmailError] = useState('Email не должен быть пустым');\r\n    const [nameError, setNameError] = useState('Имя не должен быть пустым');\r\n    const [passwordError, setPasswordError] = useState('Пароль не должен быть пустым');\r\n    const [passwordСonfirmationError, setPasswordСonfirmationError] = useState('Подтверждение пароля не должно быть пустым');\r\n    \r\n    //валидна форма или нет\r\n    const [formValid, setFormValid] = useState(false);\r\n\r\n    //валидна форма или нет\r\n    useEffect(() => {\r\n        if(emailError || nameError || passwordError  || passwordСonfirmationError) {\r\n            //если возникли ошибки форма не валидна\r\n            setFormValid(false);\r\n        } else {\r\n            //если ошибок нет то форма валидна\r\n            setFormValid(true);\r\n        }\r\n    },[emailError, nameError, passwordError, passwordСonfirmationError]);\r\n\r\n    //Пользователь покинул поле ввода\r\n    const handlerBlur = (event) => {\r\n        switch(event.target.name) {\r\n            case 'email':\r\n                setEmailDirty(true)\r\n                break\r\n            case 'name':\r\n                setNameDirty(true)\r\n                break\r\n            case 'password':\r\n                setPasswordDirty(true)\r\n                break\r\n            case 'password_confirmation':\r\n                setPasswordСonfirmationDirty(true)\r\n                break\r\n        }\r\n    };\r\n\r\n    //если введен некорректный email то уведомляем\r\n    const emailHandler = (event) => {\r\n        setEmail(event.target.value)\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if(!re.test(String(event.target.value).toLowerCase())) {\r\n            setEmailError('Некорректный email, пример: text@mail.ru')\r\n            if(!event.target.value) {\r\n                setEmailError('Email не должен быть пустым')  \r\n            }\r\n        } else {\r\n            setEmailError('')\r\n        }\r\n    };\r\n\r\n    //если введен длинный name то уведомляем\r\n    const nameHandler = (event) => {\r\n        setName(event.target.value);\r\n        if(event.target.value.length > 255) {\r\n            if(!event.target.value) {\r\n                setNameError('Имя не должен быть пустым')  \r\n            }\r\n            setNameError('Имя должено быть меньше 255-ти символов');\r\n        }\r\n        else {\r\n            setNameError('')\r\n        }\r\n    };\r\n\r\n    //если введен короткий password то уведомляем\r\n    const passwordHandler = (event) => {\r\n        setPassword(event.target.value);\r\n        if(event.target.value.length < 8) {\r\n            setPasswordError('Пароль должен быть больше 8-ми символов');\r\n            if(!event.target.value) {\r\n                setPasswordError('Пароль не должен быть пустым')  \r\n            }\r\n        } else if(event.target.value.length > 255) {\r\n            setPasswordError('Пароль должен быть меньше 255-ти символов')\r\n        }\r\n        else {\r\n            setPasswordError('')\r\n        }\r\n    };\r\n\r\n    //если введен короткий passwordСonfirmation то уведомляем\r\n    const passwordСonfirmationHandler = (event) => {\r\n        setPasswordСonfirmation(event.target.value);\r\n        if(event.target.value.length < 8) {\r\n            setPasswordСonfirmationError('Пароль должен быть больше 8-ми символов');\r\n            if(!event.target.value) {\r\n                setPasswordСonfirmationError('Пароль не должен быть пустым')  \r\n            }\r\n        } else if(event.target.value.length > 255) {\r\n            setPasswordСonfirmationError('Пароль должен быть меньше 255-ти символов')\r\n        }\r\n        else if(event.target.value !== password) {\r\n            setPasswordСonfirmationError('Пароли не совпадают');\r\n        } else {\r\n            setPasswordСonfirmationError('')\r\n        }\r\n    };\r\n    //если картинка не того размера или слишком большая то уведомляем\r\n    const onChangeFile = (event) => {\r\n        setAvatar(event.target.value);\r\n        const imageFile = event.target.files[0];\r\n        if(!imageFile) {\r\n            setAvatarError('')\r\n        } else if (!imageFile.name.match(/\\.(jpeg|bmp|png)$/)) {\r\n            setAvatarError('Выберите формат jpeg/bmp/png')\r\n        } else if(imageFile.size > 1e+7) {\r\n            console.log(imageFile.size);\r\n            setAvatarError('Выберите картинку меньше 10МБ')\r\n        } else {\r\n            setAvatarError('')\r\n        }\r\n    };\r\n\r\n    //обработчик сабмита\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        onRegister( avatar, email, name, password, password_confirmation);\r\n    };\r\n\r\n    return(\r\n        <section className=\"sign-up\">\r\n            <div className=\"sign-up__content\">\r\n                <h3 className=\"sign-up__title\">Регистрация</h3>\r\n                <form onSubmit={handleSubmit} className=\"sign-up__form\" noValidate>\r\n                    <p className=\"sign-up__avatar-upload-text\">Добавьте jpeg/bmp/png картинку размером не более 10МБ \r\n                        <span className=\"sign-up__optional-input\"> *необязательное поле</span>\r\n                    </p>\r\n                    <input\r\n                        value={avatar}\r\n                        type=\"file\"\r\n                        onChange={event => onChangeFile(event)}\r\n                        id='sign-up-avatar-input'\r\n                        name=\"avatar\"\r\n                        placeholder=\"Выберите файл\"\r\n                        className=\"sign-up__input sign-up__input_type_avatar\"\r\n                    />\r\n                    <label \r\n                        className=\"sign-up__input-label\"\r\n                        htmlFor=\"sign-up-avatar-input\"\r\n                        >\r\n                           {avatarError} \r\n                    </label>\r\n                    \r\n                    <input\r\n                        value={email}\r\n                        id='sign-up-email-input'\r\n                        className=\"sign-up__input sign-up__input_type_email\"\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"Email\"\r\n                        required\r\n                        onBlur={event => handlerBlur(event)}\r\n                        onChange={event => emailHandler(event)}\r\n                    />\r\n                    {(emailDirty && emailError) &&\r\n                        <label \r\n                        className=\"sign-up__input-label\"\r\n                        htmlFor=\"sign-up-email-input\"\r\n                        >\r\n                           {emailError} \r\n                        </label>\r\n                    }\r\n\r\n                    <input\r\n                        value={name}\r\n                        id='sign-up-name-input'\r\n                        className=\"sign-up__input sign-up__input_type_name\"\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        onBlur={event => handlerBlur(event)}\r\n                        onChange={ event => nameHandler(event)}\r\n                        placeholder=\"Имя\"\r\n                        required\r\n                    />\r\n                    {(nameDirty && nameError) &&\r\n                        <label \r\n                        className=\"sign-up__input-label\"\r\n                        htmlFor=\"sign-up-name-input\"\r\n                        >\r\n                           {nameError} \r\n                        </label>\r\n                    }\r\n\r\n                    <input\r\n                        value={password}\r\n                        id='sign-up-password-input'\r\n                        className=\"sign-up__input sign-up__input_type_password\"\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\"Пароль\"\r\n                        required\r\n                        onBlur={event => handlerBlur(event)}\r\n                        onChange={event => passwordHandler(event)}\r\n                    />\r\n                    {(passwordDirty && passwordError) &&\r\n                        <label \r\n                        className=\"sign-up__input-label\"\r\n                        htmlFor=\"sign-up-password-input\"\r\n                        >\r\n                           {passwordError} \r\n                        </label>\r\n                    }\r\n                    \r\n                    <input\r\n                        value={password_confirmation}\r\n                        id='sign-up-password-confirmation-input'\r\n                        className=\"sign-up__input sign-up__input_type_password-сonfirmation\"\r\n                        type=\"password\"\r\n                        name=\"password_confirmation\"\r\n                        onBlur={event => handlerBlur(event)}\r\n                        onChange={event => passwordСonfirmationHandler(event)}\r\n                        placeholder=\"Подтвердите пароль\"\r\n                        required\r\n                    />\r\n                    {(passwordСonfirmationDirty && passwordСonfirmationError) &&\r\n                        <label \r\n                        className=\"sign-up__input-label\"\r\n                        htmlFor=\"sign-up-password-confirmation-input\"\r\n                        >\r\n                           {passwordСonfirmationError} \r\n                        </label>\r\n                    }\r\n\r\n                    <button\r\n                        //если форма не валидна то кнопка не доступна\r\n                        disabled={!formValid}\r\n                        type=\"submit\"\r\n                        className=\"sign-up__save\"\r\n                        value=\"Зарегистрироваться\"\r\n                    >\r\n                        Зарегистрироваться\r\n                    </button>\r\n                </form>\r\n            </div> \r\n        </section>\r\n    );\r\n}\r\nexport default Register;","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\n\r\nfunction Login({ onLogin }) {\r\n    //данные email\r\n    const [email, setEmail] = useState('');\r\n    //данные password\r\n    const [password, setPassword] = useState('');\r\n\r\n    //были или не были в input\r\n    const [emailDirty, setEmailDirty] = useState(false);\r\n    const [passwordDirty, setPasswordDirty] = useState(false);\r\n\r\n    //отражает ошибку под input\r\n    const [emailError, setEmailError] = useState('Email не должен быть пустым');\r\n    const [passwordError, setPasswordError] = useState('Пароль не должен быть пустым');\r\n\r\n    //валидна форма или нет\r\n    const [formValid, setFormValid] = useState(false);\r\n\r\n    //валидна форма или нет\r\n    useEffect(() => {\r\n        if(emailError || passwordError) {\r\n            //если возникли ошибки форма не валидна\r\n            setFormValid(false);\r\n        } else {\r\n            //если ошибок нет то форма валидна\r\n            setFormValid(true);\r\n        }\r\n    },[emailError, passwordError]);\r\n\r\n    //Пользователь покинул поле ввода\r\n    const handlerBlur = (event) => {\r\n        switch(event.target.name) {\r\n            case 'email':\r\n                setEmailDirty(true)\r\n                break\r\n            case 'password':\r\n                setPasswordDirty(true)\r\n                break\r\n        }\r\n    };\r\n\r\n    //если введен некорректный email то уведомляем\r\n    const emailHandler = (event) => {\r\n        setEmail(event.target.value)\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if(!re.test(String(event.target.value).toLowerCase())) {\r\n            setEmailError('Некорректный email, пример: text@mail.ru')\r\n            if(!event.target.value) {\r\n                setEmailError('Email не должен быть пустым')  \r\n            }\r\n        } else {\r\n            setEmailError('')\r\n        }\r\n    };\r\n\r\n    //если введен короткий password то уведомляем\r\n    const passwordHandler = (event) => {\r\n        setPassword(event.target.value);\r\n        if(event.target.value.length < 8) {\r\n            setPasswordError('Пароль должен быть больше 8-ми символов');\r\n            if(!event.target.value) {\r\n                setPasswordError('Пароль не должен быть пустым')  \r\n            }\r\n        } else if(event.target.value.length > 255) {\r\n            setPasswordError('Пароль должен быть меньше 255-ти символов')\r\n        }\r\n        else {\r\n            setPasswordError('')\r\n        }\r\n    };\r\n    \r\n    //обработчик сабмита\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        onLogin(email, password);\r\n    };\r\n\r\n    return(\r\n        <section className=\"sing-in\">\r\n            <div className=\"sign-in__content\">\r\n                <h3 className=\"sing-in__title\">Вход</h3>\r\n                <form onSubmit={handleSubmit} className=\"sing-in__form\" noValidate>\r\n                    <input\r\n                        value={email}\r\n                        id='sing-in-email-input'\r\n                        className=\"sing-in__input sing-in__input_type_email\"\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"Email\"\r\n                        required\r\n                        onBlur={event => handlerBlur(event)}\r\n                        onChange={event => emailHandler(event)}\r\n                    />\r\n                    {(emailDirty && emailError) &&\r\n                        <label \r\n                        className=\"sing-in__input-label\"\r\n                        htmlFor=\"sing-in-email-input\"\r\n                        >\r\n                           {emailError} \r\n                        </label>\r\n                    }\r\n\r\n                    <input\r\n                        value={password}\r\n                        id='sing-in-password-input'\r\n                        className=\"sing-in__input sing-in__input_type_password\"\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\"Пароль\"\r\n                        required\r\n                        onBlur={event => handlerBlur(event)}\r\n                        onChange={event => passwordHandler(event)}\r\n                    />\r\n                    {(passwordDirty && passwordError) &&\r\n                        <label \r\n                        className=\"sing-in__input-label\"\r\n                        htmlFor=\"sing-in-password-input\"\r\n                        >\r\n                           {passwordError} \r\n                        </label>\r\n                    }\r\n                    \r\n                    <button\r\n                        //если форма не валидна то кнопка не доступна\r\n                        disabled={!formValid}\r\n                        type=\"submit\"\r\n                        className=\"sing-in__save\"\r\n                        value=\"Вход\"\r\n                    >\r\n                        Войти\r\n                    </button>\r\n                </form>\r\n            </div>\r\n            \r\n        </section>\r\n    );\r\n}\r\nexport default Login;","import React from 'react';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\n//Защищенный маршрут\r\nconst ProtectedRoute = ({ component: Component, ...props }) => {\r\n  return (\r\n    //Если залогенены то переходим в main иначе на станицу входа\r\n    <Route>\r\n      {\r\n        () => props.loggedIn === true ? <Component {...props} /> : <Redirect to=\"/signin\" />\r\n      }\r\n    </Route>\r\n  )\r\n}\r\nexport default ProtectedRoute;","export const BASE_URL = 'https://guest-book.naveksoft.com';\r\n\r\nconst checkAnswerCorrectness = (response) => {\r\n    if (response.ok) {\r\n        return response.json();\r\n    }\r\n    return Promise.reject(`Ошибка ${response.status}`)\r\n};\r\n\r\nexport const getReviews = (token) => {\r\n  return fetch(`${BASE_URL}/api/v1/posts`, {\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    }\r\n  })\r\n  .then(response => checkAnswerCorrectness(response))\r\n};","export const BASE_URL = 'https://guest-book.naveksoft.com';\r\n\r\nconst checkAnswerCorrectness = (response) => {\r\n    if (response.ok) {\r\n        return response.json();\r\n    }\r\n    return Promise.reject(`Ошибка ${response.status}`)\r\n};\r\n\r\nexport const register = (avatar, email, name, password, password_confirmation) => {\r\n  return fetch(`${BASE_URL}/api/v1/auth/register`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n     body: JSON.stringify({ avatar, email, name, password, password_confirmation })\r\n  })\r\n  .then(response => checkAnswerCorrectness(response))\r\n};\r\n\r\nexport const authorize = (email, password) => {\r\n    return fetch(`${BASE_URL}/api/v1/auth/login`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ email, password })\r\n    })\r\n    .then(response => checkAnswerCorrectness(response))\r\n    \r\n};","import { useEffect } from 'react';\r\nconst escape = 27;\r\n\r\nfunction InfoTooltip({ title , isOpen, onClose, onOvarlayClose }) {\r\n    useEffect(\r\n        () => {\r\n            if(!isOpen) return;\r\n            const handleEscClose =(event) => {\r\n                if((event.keyCode === escape)) {\r\n                    onClose() \r\n                }\r\n            }\r\n            document.addEventListener('keyup', handleEscClose);\r\n            return () => {\r\n                document.removeEventListener('keyup', handleEscClose);  \r\n            }\r\n        }\r\n    )\r\n\r\n    return (\r\n        <div className={`popup ${isOpen && 'popup_opened'}`} onClick={onOvarlayClose}>\r\n                <div className=\"popup__content\">\r\n                    <button className=\"popup__close\" type=\"button\" onClick={onClose}></button>\r\n                    <h3 className=\"popup__title\">{title}</h3>\r\n                </div>\r\n        </div>\r\n    );\r\n}\r\nexport default InfoTooltip;","import Header from \"./Header\";\r\nimport Main from \"./Main\";\r\nimport Footer from \"./Footer\";\r\nimport { useState, useEffect, useCallback } from \"react\";\r\nimport Register from \"./Register\";\r\nimport Login from \"./Login\";\r\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\r\nimport ProtectedRoute from \"./ProtectedRoute\";\r\nimport * as api from \"../utils/api\";\r\nimport * as auth from '../utils/auth';\r\nimport InfoTooltip from \"./InfoTooltip.js\";\r\n\r\nfunction App() {\r\n    const [loggedIn, setLoggedIn] = useState(false);\r\n    // history.push — создаёт запись в навигации истории.\r\n    const history = useHistory();\r\n\r\n    //карточки\r\n    const [posts, setPosts] = useState([]);\r\n    const [isInfoTooltipInformation, setInfoTooltipInformation] = useState({title: \"Вы успешно зарегистрировались!\"});\r\n    const [isInfoTooltipPopupOpen, setInfoTooltipPopupOpen] = useState(false);\r\n\r\n    function handleOpenInfoTooltip() {\r\n        setInfoTooltipPopupOpen(true)\r\n    };\r\n\r\n    function closePopup() {\r\n        setInfoTooltipPopupOpen(false) \r\n    };\r\n\r\n    function closePopupByOverlay(event) { \r\n        if (event.target.classList.contains('popup')) {\r\n            closePopup()\r\n        }\r\n    };\r\n\r\n    function handleRegister(avatar, email, name, password, password_confirmation) {\r\n        auth.register(avatar, email, name, password, password_confirmation)\r\n        .then((result) => {\r\n            handleOpenInfoTooltip()\r\n            // console.log(result);\r\n            setInfoTooltipInformation({title: \"Вы успешно зарегистрировались!\"});\r\n            history.push('/signin')\r\n        })\r\n        .catch((err)=> {\r\n            handleOpenInfoTooltip()\r\n            if(`${err}` === 'Ошибка 422') {\r\n                setInfoTooltipInformation({title: \"Пользователь с таким email уже существует!\"});\r\n            } else {\r\n                setInfoTooltipInformation({title: \"Что-то пошло не так!\"});\r\n            }\r\n            history.push('/signup')\r\n            // console.log(`${err}`)\r\n        })\r\n    };\r\n\r\n    function handleLogin(email, password) {\r\n        auth.authorize(email, password)\r\n        .then((result) => {\r\n            if (result.token.access_token) {\r\n                setLoggedIn(true);\r\n                localStorage.setItem('token', result.token.access_token);\r\n                getPosts();\r\n                history.push('/main');\r\n            }\r\n        })\r\n        .catch((err)=> {\r\n            handleOpenInfoTooltip();\r\n            if(`${err}` === 'Ошибка 422') {\r\n                setInfoTooltipInformation({title: \"Проверьте введенные данные!\"});\r\n            }else {\r\n                setInfoTooltipInformation({title: \"Что-то пошло не так!\"});\r\n            }\r\n            history.push('/signin')\r\n            // console.log(`${err}`)\r\n        })\r\n    };\r\n\r\n    function handleSignOut() {\r\n        localStorage.removeItem('token');\r\n        setLoggedIn(false);\r\n        history.push('/signin');\r\n        // console.log(localStorage.getItem('token'));\r\n    };\r\n\r\n    function getPosts() {\r\n        const token = localStorage.getItem('token')\r\n        api.getReviews(token)\r\n        .then((result) =>{\r\n            setPosts(result.data.slice(0, 15))\r\n        })\r\n        .catch(err => console.log(`Ошибка получения информации${err}`));\r\n    };\r\n\r\n    const handleTokenCheck = useCallback(() => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            getPosts();\r\n            setLoggedIn(true)\r\n            history.push('/main')\r\n        } else {\r\n            history.push('/signin');\r\n        }\r\n    }, [history]);\r\n\r\n    useEffect(() => {\r\n        handleTokenCheck();\r\n    }, [handleTokenCheck]);\r\n\r\n    return(\r\n        <div className=\"page\">\r\n            <div className=\"page__container\">\r\n                <Header\r\n                    onSignOut={handleSignOut}\r\n                />\r\n                <Switch>\r\n                    <ProtectedRoute\r\n                        path=\"/main\"\r\n                        loggedIn={loggedIn}\r\n                        component={Main}\r\n                        reviews={posts}\r\n                    />\r\n\r\n                    <Route path=\"/signup\">\r\n                        <Register onRegister={handleRegister} />\r\n                    </Route>\r\n\r\n                    <Route path=\"/signin\">\r\n                        <Login onLogin={handleLogin} handleTokenCheck={handleTokenCheck} />\r\n                    </Route>\r\n                        \r\n                    <Route>\r\n                        {loggedIn ? <Redirect to=\"/main\" /> : <Redirect to=\"/signin\" />}\r\n                    </Route>\r\n\r\n                </Switch>\r\n\r\n                {loggedIn && <Footer />}\r\n\r\n                <InfoTooltip\r\n                    title={isInfoTooltipInformation.title}\r\n                    isOpen={isInfoTooltipPopupOpen}\r\n                    onClose={closePopup}\r\n                    onOvarlayClose={closePopupByOverlay}  \r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter> \r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}